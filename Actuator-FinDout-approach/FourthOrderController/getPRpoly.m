function PRpoly = getPRpoly(bet, ka, d, alph, Kx, ...
                            omeg, zet, mvs, ...
                            a0, a1, b0, b1, c0, c1)

% Actuator parameters: bet, ka, d, alph, Kx
% VS parameters: omeg, zet, mvs
% Controller parameters: a0, a1, b0, b1, c0, c1

PRpoly = zeros(6,1);
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% The following is Mathematica generated - copied and pasted from
% Mathematica output and replaced greek letters such as alph
% appropriately. It is otherwise unedited
PRpoly(6) = (a0*b0*c0*omeg*(a0*mvs*(b1*c0*d*Kx*omeg + b0*c1*d*Kx*omeg ...
    - b0*c0*(2*d*Kx*zet + ka*omeg)) + ...
    d*Kx*omeg*(a1*(b0*c0*mvs - d*Kx*alph) + d*Kx*alph*(-b1 - ...
    c1 + alph + bet + 2*zet*omeg))))/(d*ka*Kx);
PRpoly(5) = (a0*b0*c0*(b1*c0 + b0*c1 + a0*(b1 + c1) + a1*(b0 + c0 + ...
    b1*c1))*d*Kx*mvs*alph*omeg^2 - (a1*b1*c0 + b0*(c0 + a1*c1) + ...
    a0*(b0 + c0 + b1*c1))*alph*omeg*(a0*b0*c0*mvs*(2*d*Kx*zet ...
    + ka*omeg) + d^2*Kx^2*alph*omeg*(a1 + b1 + c1 - alph ...
    - bet - 2*zet*omeg)) + (a1*b0*c0 + a0*b1*c0 + ...
    a0*b0*c1)*(d*Kx*alph^2*omeg*(2*a1*d*Kx*zet + 2*b1*d*Kx*...
    zet + 2*c1*d*Kx*zet - 2*d*Kx*alph*zet - ...
    2*d*Kx*bet*zet + a1*ka*omeg + b1*ka*omeg + c1*ka*...
    omeg + d*Kx*omeg - ka*alph*omeg - ka*bet*omeg ...
    - 4*d*Kx*zet^2*omeg - 2*ka*zet*omeg^2) + ...
    a0*b0*c0*mvs*(d*Kx*alph + ka*omeg*(2*alph*zet + ...
    omeg))) - a0*b0*c0*(a0*b0*c0*ka*mvs*(alph + ...
    2*zet*omeg) + d*Kx*alph*(a1*d*Kx*alph + b1*d*Kx*...
    alph + c1*d*Kx*alph - d*Kx*alph^2 - d*Kx*alph*bet ...
    + 2*c1*ka*alph*zet*omeg - ...
    2*ka*alph^2*zet*omeg - 2*ka*alph*bet*zet*...
    omeg + c1*ka*omeg^2 - ka*bet*omeg^2 - 4*ka*alph*...
    zet^2*omeg^2 - 2*ka*zet*omeg^3 + a1*ka*omeg*(2*...
    alph*zet + omeg) + b1*ka*omeg*(2*alph*zet + ...
    omeg))))/(d*ka*Kx*alph);
PRpoly(4) = -(a0*b0*c0*(a1 + b1 + c1 - bet)) + (a0*b0*c0*(a1 + b1 + c1)*mvs*...
    omeg^2)/ka - ((a0 + b0 + a1*b1 + c0 + a1*c1 + ...
    b1*c1)*omeg*(a0*b0*c0*mvs*(2*d*Kx*zet + ka*omeg) + ...
    d^2*Kx^2*alph*omeg*(a1 + b1 + c1 - alph - bet - 2*...
    zet*omeg)))/(d*ka*Kx) + (a1*b0*c0 + a0*b1*c0 + ...
    a0*b0*c1)*((a0*b0*c0*mvs)/(d*Kx*alph) + b1*alph + c1*alph ...
    + (d*Kx*alph)/ka - alph^2 - alph*bet + 2*b1*zet*...
    omeg + 2*c1*zet*omeg - 2*alph*zet*omeg - 2*...
    bet*zet*omeg + omeg^2 - 4*zet^2*omeg^2 + a1*(...
    alph + 2*zet*omeg)) + ((b1*c0 + b0*c1 + a0*(b1 + c1) + ...
    a1*(b0 + c0 + b1*c1))*(d*Kx*alph^2*omeg*(2*a1*d*Kx*zet + ...
    2*b1*d*Kx*zet + 2*c1*d*Kx*zet - 2*d*Kx*alph*zet - ...
    2*d*Kx*bet*zet + a1*ka*omeg + b1*ka*omeg + c1*ka*...
    omeg + d*Kx*omeg - ka*alph*omeg - ka*bet*omeg ...
    - 4*d*Kx*zet^2*omeg - 2*ka*zet*omeg^2) + ...
    a0*b0*c0*mvs*(d*Kx*alph + ka*omeg*(2*alph*zet + ...
    omeg))))/(d*ka*Kx*alph) - ((a1*b1*c0 + b0*(c0 + a1*c1) + ...
    a0*(b0 + c0 + b1*c1))*(a0*b0*c0*ka*mvs*(alph + ...
    2*zet*omeg) + d*Kx*alph*(a1*d*Kx*alph + b1*d*Kx*...
    alph + c1*d*Kx*alph - d*Kx*alph^2 - d*Kx*alph*bet ...
    + 2*c1*ka*alph*zet*omeg - ...
    2*ka*alph^2*zet*omeg - 2*ka*alph*bet*zet*...
    omeg + c1*ka*omeg^2 - ka*bet*omeg^2 - 4*ka*alph*...
    zet^2*omeg^2 - 2*ka*zet*omeg^3 + a1*ka*omeg*(2*...
    alph*zet + omeg) + b1*ka*omeg*(2*alph*zet + ...
    omeg))))/(d*ka*Kx*alph);
PRpoly(3) = a1*b0*c0+a0*b1*c0+a0*b0*c1-(a1*b1*c0+b0*(c0+a1*c1)+a0*(b0 ...
    + c0 + b1*c1))*(a1 + b1 + c1 - bet) - ...
    (omeg*(a0*b0*c0*mvs*(2*d*Kx*zet + ka*omeg) + d^2*Kx^2*...
    alph*omeg*(a1 + b1 + c1 - alph - bet - 2*zet*...
    omeg)))/(d*ka*Kx) + (b1*c0 + b0*c1 + a0*(b1 + c1) + a1*(b0 + c0 + ...
    b1*c1))*((a0*b0*c0*mvs)/(d*Kx*alph) + b1*alph + c1*alph + ...
    (d*Kx*alph)/ka - alph^2 - alph*bet + 2*b1*zet*...
    omeg + 2*c1*zet*omeg - 2*alph*zet*omeg - 2*...
    bet*zet*omeg + omeg^2 - 4*zet^2*omeg^2 + a1*(...
    alph + 2*zet*omeg)) + ((a1 + b1 + c1)*(d*Kx*alph^2*...
    omeg*(2*a1*d*Kx*zet + 2*b1*d*Kx*zet + 2*c1*d*Kx*zet - ...
    2*d*Kx*alph*zet - 2*d*Kx*bet*zet + a1*ka*omeg + ...
    b1*ka*omeg + c1*ka*omeg + d*Kx*omeg - ...
    ka*alph*omeg - ka*bet*omeg - ...
    4*d*Kx*zet^2*omeg - 2*ka*zet*omeg^2) + ...
    a0*b0*c0*mvs*(d*Kx*alph + ka*omeg*(2*alph*zet + ...
    omeg))))/(d*ka*Kx*alph) - ((a0 + b0 + a1*b1 + c0 + a1*c1 + ...
    b1*c1)*(a0*b0*c0*ka*mvs*(alph + 2*zet*omeg) + d*Kx*...
    alph*(a1*d*Kx*alph + b1*d*Kx*alph + c1*d*Kx*alph - ...
    d*Kx*alph^2 - d*Kx*alph*bet + 2*c1*ka*alph*zet*...
    omeg - 2*ka*alph^2*zet*omeg - 2*ka*alph*bet*...
    zet*omeg + c1*ka*omeg^2 - ka*bet*omeg^2 - 4*ka*...
    alph*zet^2*omeg^2 - 2*ka*zet*omeg^3 + a1*ka*...
    omeg*(2*alph*zet + omeg) + ...
    b1*ka*omeg*(2*alph*zet + omeg))))/(d*ka*Kx*alph);
PRpoly(2) = -(b1^2*c1) - c0*c1 - b1*c1^2 + a0*a1*(-1 + ...
    (b0*c0*mvs)/(d*Kx*alph)) + b1^2*alph + 2*b1*c1*alph + ...
    c1^2*alph - b1*alph^2 - c1*alph^2 + (d*Kx*alph^2)/ka ...
    + a0*bet + c0*bet + b1*c1*bet - b1*alph*bet - c1*...
    alph*bet + (d*Kx*alph*bet)/ka + b0*(-b1 + bet) + ...
    2*b1^2*zet*omeg + 4*b1*c1*zet*omeg + 2*c1^2*zet*...
    omeg - 4*b1*alph*zet*omeg - 4*c1*alph*zet*...
    omeg + 2*alph^2*zet*omeg - 2*b1*bet*zet*...
    omeg - 2*c1*bet*zet*omeg + ...
    2*alph*bet*zet*omeg + bet*omeg^2 - 4*b1*...
    zet^2*omeg^2 - 4*c1*zet^2*omeg^2 + ...
    4*alph*zet^2*omeg^2 + 2*zet*omeg^3 - a1^2*(b1 + ...
    c1 - alph - 2*zet*omeg) + (a0*b0*c0*mvs*(b1 + c1 - ...
    alph - 2*zet*omeg))/(d*Kx*alph) - a1*(b1 + c1 - ...
    alph - 2*zet*omeg)*(b1 + c1 - alph - bet - 2*...
    zet*omeg);
PRpoly(1) = bet;
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%